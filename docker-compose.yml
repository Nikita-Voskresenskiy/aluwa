version: '3.3'

services:
  app:
    build: ./app
    env_file: 
      - ./app/.env
    restart: always
    ports:
      - "8000:8000"

  db:
    image: postgis/postgis:17-3.5
    env_file: 
      - ./db/.env
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./db/postgres_data:/var/lib/postgresql/data/
    #deploy:
    #  resources:
    #    limits:
    #      cpus: '0.50'
    #      memory: 512M
    #    reservations:
    #      cpus: '0.25'
    #      memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
      interval: 30s
      timeout: 10s
      retries: 5
    tty: true
    stdin_open: true

  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
    volumes:
      - ./nginx/conf:/etc/nginx/conf
      - ./nginx/letsencrypt:/etc/letsencrypt
      - ./nginx/html:/usr/share/nginx/html
    restart: unless-stopped
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    depends_on:
      - nginx
    volumes:
      - ./nginx/letsencrypt:/etc/letsencrypt
      - ./nginx/html:/var/www/html
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  telegrambot:
    build: ./telegrambot
    env_file: ./telegrambot/.env
    restart: always
